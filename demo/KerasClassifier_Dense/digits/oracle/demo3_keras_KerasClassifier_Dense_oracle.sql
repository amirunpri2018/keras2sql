-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : KerasClassifier_Dense
-- Dataset : digits
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH keras_input AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9", "ADS"."Feature_10" AS "Feature_10", "ADS"."Feature_11" AS "Feature_11", "ADS"."Feature_12" AS "Feature_12", "ADS"."Feature_13" AS "Feature_13", "ADS"."Feature_14" AS "Feature_14", "ADS"."Feature_15" AS "Feature_15", "ADS"."Feature_16" AS "Feature_16", "ADS"."Feature_17" AS "Feature_17", "ADS"."Feature_18" AS "Feature_18", "ADS"."Feature_19" AS "Feature_19", "ADS"."Feature_20" AS "Feature_20", "ADS"."Feature_21" AS "Feature_21", "ADS"."Feature_22" AS "Feature_22", "ADS"."Feature_23" AS "Feature_23", "ADS"."Feature_24" AS "Feature_24", "ADS"."Feature_25" AS "Feature_25", "ADS"."Feature_26" AS "Feature_26", "ADS"."Feature_27" AS "Feature_27", "ADS"."Feature_28" AS "Feature_28", "ADS"."Feature_29" AS "Feature_29", "ADS"."Feature_30" AS "Feature_30", "ADS"."Feature_31" AS "Feature_31", "ADS"."Feature_32" AS "Feature_32", "ADS"."Feature_33" AS "Feature_33", "ADS"."Feature_34" AS "Feature_34", "ADS"."Feature_35" AS "Feature_35", "ADS"."Feature_36" AS "Feature_36", "ADS"."Feature_37" AS "Feature_37", "ADS"."Feature_38" AS "Feature_38", "ADS"."Feature_39" AS "Feature_39", "ADS"."Feature_40" AS "Feature_40", "ADS"."Feature_41" AS "Feature_41", "ADS"."Feature_42" AS "Feature_42", "ADS"."Feature_43" AS "Feature_43", "ADS"."Feature_44" AS "Feature_44", "ADS"."Feature_45" AS "Feature_45", "ADS"."Feature_46" AS "Feature_46", "ADS"."Feature_47" AS "Feature_47", "ADS"."Feature_48" AS "Feature_48", "ADS"."Feature_49" AS "Feature_49", "ADS"."Feature_50" AS "Feature_50", "ADS"."Feature_51" AS "Feature_51", "ADS"."Feature_52" AS "Feature_52", "ADS"."Feature_53" AS "Feature_53", "ADS"."Feature_54" AS "Feature_54", "ADS"."Feature_55" AS "Feature_55", "ADS"."Feature_56" AS "Feature_56", "ADS"."Feature_57" AS "Feature_57", "ADS"."Feature_58" AS "Feature_58", "ADS"."Feature_59" AS "Feature_59", "ADS"."Feature_60" AS "Feature_60", "ADS"."Feature_61" AS "Feature_61", "ADS"."Feature_62" AS "Feature_62", "ADS"."Feature_63" AS "Feature_63" 
FROM "DIGITS" "ADS"), 
keras_input_1 AS 
(SELECT keras_input."KEY" AS "KEY", keras_input."Feature_0" AS "Feature_0", keras_input."Feature_1" AS "Feature_1", keras_input."Feature_2" AS "Feature_2", keras_input."Feature_3" AS "Feature_3", keras_input."Feature_4" AS "Feature_4", keras_input."Feature_5" AS "Feature_5", keras_input."Feature_6" AS "Feature_6", keras_input."Feature_7" AS "Feature_7", keras_input."Feature_8" AS "Feature_8", keras_input."Feature_9" AS "Feature_9", keras_input."Feature_10" AS "Feature_10", keras_input."Feature_11" AS "Feature_11", keras_input."Feature_12" AS "Feature_12", keras_input."Feature_13" AS "Feature_13", keras_input."Feature_14" AS "Feature_14", keras_input."Feature_15" AS "Feature_15", keras_input."Feature_16" AS "Feature_16", keras_input."Feature_17" AS "Feature_17", keras_input."Feature_18" AS "Feature_18", keras_input."Feature_19" AS "Feature_19", keras_input."Feature_20" AS "Feature_20", keras_input."Feature_21" AS "Feature_21", keras_input."Feature_22" AS "Feature_22", keras_input."Feature_23" AS "Feature_23", keras_input."Feature_24" AS "Feature_24", keras_input."Feature_25" AS "Feature_25", keras_input."Feature_26" AS "Feature_26", keras_input."Feature_27" AS "Feature_27", keras_input."Feature_28" AS "Feature_28", keras_input."Feature_29" AS "Feature_29", keras_input."Feature_30" AS "Feature_30", keras_input."Feature_31" AS "Feature_31", keras_input."Feature_32" AS "Feature_32", keras_input."Feature_33" AS "Feature_33", keras_input."Feature_34" AS "Feature_34", keras_input."Feature_35" AS "Feature_35", keras_input."Feature_36" AS "Feature_36", keras_input."Feature_37" AS "Feature_37", keras_input."Feature_38" AS "Feature_38", keras_input."Feature_39" AS "Feature_39", keras_input."Feature_40" AS "Feature_40", keras_input."Feature_41" AS "Feature_41", keras_input."Feature_42" AS "Feature_42", keras_input."Feature_43" AS "Feature_43", keras_input."Feature_44" AS "Feature_44", keras_input."Feature_45" AS "Feature_45", keras_input."Feature_46" AS "Feature_46", keras_input."Feature_47" AS "Feature_47", keras_input."Feature_48" AS "Feature_48", keras_input."Feature_49" AS "Feature_49", keras_input."Feature_50" AS "Feature_50", keras_input."Feature_51" AS "Feature_51", keras_input."Feature_52" AS "Feature_52", keras_input."Feature_53" AS "Feature_53", keras_input."Feature_54" AS "Feature_54", keras_input."Feature_55" AS "Feature_55", keras_input."Feature_56" AS "Feature_56", keras_input."Feature_57" AS "Feature_57", keras_input."Feature_58" AS "Feature_58", keras_input."Feature_59" AS "Feature_59", keras_input."Feature_60" AS "Feature_60", keras_input."Feature_61" AS "Feature_61", keras_input."Feature_62" AS "Feature_62", keras_input."Feature_63" AS "Feature_63" 
FROM keras_input), 
layer_dense_1 AS 
(SELECT keras_input_1."KEY" AS "KEY", -0.06701119989156723 + 0.27533286809921265 * keras_input_1."Feature_0" + -0.19672216475009918 * keras_input_1."Feature_1" + 0.022521981969475746 * keras_input_1."Feature_2" + -0.010203752666711807 * keras_input_1."Feature_3" + 0.021699411794543266 * keras_input_1."Feature_4" + 0.06827354431152344 * keras_input_1."Feature_5" + 0.24141396582126617 * keras_input_1."Feature_6" + -0.17027752101421356 * keras_input_1."Feature_7" + -0.14529617130756378 * keras_input_1."Feature_8" + -0.22423122823238373 * keras_input_1."Feature_9" + -0.3408358693122864 * keras_input_1."Feature_10" + 0.17420105636119843 * keras_input_1."Feature_11" + -0.20692689716815948 * keras_input_1."Feature_12" + 0.07714834064245224 * keras_input_1."Feature_13" + 0.01281385775655508 * keras_input_1."Feature_14" + -0.07624173909425735 * keras_input_1."Feature_15" + -0.22131749987602234 * keras_input_1."Feature_16" + 0.01420649979263544 * keras_input_1."Feature_17" + -0.3256478011608124 * keras_input_1."Feature_18" + -0.23831388354301453 * keras_input_1."Feature_19" + 0.1575177162885666 * keras_input_1."Feature_20" + -0.1841312050819397 * keras_input_1."Feature_21" + -0.2219625860452652 * keras_input_1."Feature_22" + 0.2969568967819214 * keras_input_1."Feature_23" + -0.23375746607780457 * keras_input_1."Feature_24" + -0.17488375306129456 * keras_input_1."Feature_25" + -0.3177247941493988 * keras_input_1."Feature_26" + -0.14510273933410645 * keras_input_1."Feature_27" + -0.33504587411880493 * keras_input_1."Feature_28" + -0.05899738520383835 * keras_input_1."Feature_29" + -0.2531983256340027 * keras_input_1."Feature_30" + -0.24349159002304077 * keras_input_1."Feature_31" + -0.0015888810157775879 * keras_input_1."Feature_32" + -0.135103240609169 * keras_input_1."Feature_33" + 0.07782001048326492 * keras_input_1."Feature_34" + -0.16017939150333405 * keras_input_1."Feature_35" + 0.11525968462228775 * keras_input_1."Feature_36" + -0.22084419429302216 * keras_input_1."Feature_37" + 0.03538702055811882 * keras_input_1."Feature_38" + 0.016605228185653687 * keras_input_1."Feature_39" + -0.1119513064622879 * keras_input_1."Feature_40" + 0.14367125928401947 * keras_input_1."Feature_41" + -0.1829557865858078 * keras_input_1."Feature_42" + -0.012383321300148964 * keras_input_1."Feature_43" + 0.14650508761405945 * keras_input_1."Feature_44" + 0.17524446547031403 * keras_input_1."Feature_45" + 0.15969742834568024 * keras_input_1."Feature_46" + -0.15757912397384644 * keras_input_1."Feature_47" + 0.08411628007888794 * keras_input_1."Feature_48" + -0.12265118956565857 * keras_input_1."Feature_49" + 0.17955617606639862 * keras_input_1."Feature_50" + -0.0961424708366394 * keras_input_1."Feature_51" + 0.06913541257381439 * keras_input_1."Feature_52" + 0.20107798278331757 * keras_input_1."Feature_53" + 0.18013153970241547 * keras_input_1."Feature_54" + -0.30455365777015686 * keras_input_1."Feature_55" + -0.06935425102710724 * keras_input_1."Feature_56" + -0.10927179455757141 * keras_input_1."Feature_57" + -0.028263235464692116 * keras_input_1."Feature_58" + -0.15452583134174347 * keras_input_1."Feature_59" + -0.07586824893951416 * keras_input_1."Feature_60" + 0.018326926976442337 * keras_input_1."Feature_61" + 0.23186226189136505 * keras_input_1."Feature_62" + -0.3185967206954956 * keras_input_1."Feature_63" AS output_1, -0.0289082620292902 + 0.06231945753097534 * keras_input_1."Feature_0" + 0.00036775213084183633 * keras_input_1."Feature_1" + -0.12506330013275146 * keras_input_1."Feature_2" + 0.2245751917362213 * keras_input_1."Feature_3" + 0.012883572839200497 * keras_input_1."Feature_4" + 0.23625995218753815 * keras_input_1."Feature_5" + 0.03726079687476158 * keras_input_1."Feature_6" + 0.10718034207820892 * keras_input_1."Feature_7" + -0.1526651531457901 * keras_input_1."Feature_8" + 0.04466338828206062 * keras_input_1."Feature_9" + 0.13460393249988556 * keras_input_1."Feature_10" + -0.07738728821277618 * keras_input_1."Feature_11" + 0.1146976500749588 * keras_input_1."Feature_12" + 0.1443573385477066 * keras_input_1."Feature_13" + 0.0692344531416893 * keras_input_1."Feature_14" + 0.09115218371152878 * keras_input_1."Feature_15" + 0.06488469988107681 * keras_input_1."Feature_16" + -0.09093913435935974 * keras_input_1."Feature_17" + -0.3558732569217682 * keras_input_1."Feature_18" + -0.20218327641487122 * keras_input_1."Feature_19" + 0.4374702274799347 * keras_input_1."Feature_20" + 0.25277015566825867 * keras_input_1."Feature_21" + 0.1561548262834549 * keras_input_1."Feature_22" + -0.06663809716701508 * keras_input_1."Feature_23" + 0.09361463785171509 * keras_input_1."Feature_24" + -0.30870819091796875 * keras_input_1."Feature_25" + -0.16257748007774353 * keras_input_1."Feature_26" + -0.18787842988967896 * keras_input_1."Feature_27" + 0.19502702355384827 * keras_input_1."Feature_28" + -0.051408179104328156 * keras_input_1."Feature_29" + -0.056225959211587906 * keras_input_1."Feature_30" + -0.23335377871990204 * keras_input_1."Feature_31" + 0.1277218461036682 * keras_input_1."Feature_32" + -0.3681199848651886 * keras_input_1."Feature_33" + -0.06887175142765045 * keras_input_1."Feature_34" + 0.11636504530906677 * keras_input_1."Feature_35" + 0.15532855689525604 * keras_input_1."Feature_36" + 0.1380283236503601 * keras_input_1."Feature_37" + -0.03857734426856041 * keras_input_1."Feature_38" + 0.2884799838066101 * keras_input_1."Feature_39" + 0.1716800034046173 * keras_input_1."Feature_40" + -0.03115302138030529 * keras_input_1."Feature_41" + -0.23000553250312805 * keras_input_1."Feature_42" + -0.23829030990600586 * keras_input_1."Feature_43" + -0.08861534297466278 * keras_input_1."Feature_44" + 0.03547273948788643 * keras_input_1."Feature_45" + 0.06716743111610413 * keras_input_1."Feature_46" + -0.18621040880680084 * keras_input_1."Feature_47" + -0.08131004869937897 * keras_input_1."Feature_48" + 0.09299008548259735 * keras_input_1."Feature_49" + -0.1669607162475586 * keras_input_1."Feature_50" + 0.010537666268646717 * keras_input_1."Feature_51" + -0.0859113559126854 * keras_input_1."Feature_52" + -0.1773330718278885 * keras_input_1."Feature_53" + 0.09517940878868103 * keras_input_1."Feature_54" + -0.22676968574523926 * keras_input_1."Feature_55" + 0.30548420548439026 * keras_input_1."Feature_56" + 0.1180344671010971 * keras_input_1."Feature_57" + 0.08239474147558212 * keras_input_1."Feature_58" + 0.10245310515165329 * keras_input_1."Feature_59" + -0.06663194298744202 * keras_input_1."Feature_60" + 0.14861930906772614 * keras_input_1."Feature_61" + -0.25048503279685974 * keras_input_1."Feature_62" + -0.02783907949924469 * keras_input_1."Feature_63" AS output_2, -0.08668816834688187 + 0.0983547568321228 * keras_input_1."Feature_0" + 0.2862500250339508 * keras_input_1."Feature_1" + 0.2793797254562378 * keras_input_1."Feature_2" + 0.23012515902519226 * keras_input_1."Feature_3" + 0.07858338207006454 * keras_input_1."Feature_4" + 0.30097538232803345 * keras_input_1."Feature_5" + 0.30748996138572693 * keras_input_1."Feature_6" + -0.16553594172000885 * keras_input_1."Feature_7" + -0.13595588505268097 * keras_input_1."Feature_8" + -0.20360663533210754 * keras_input_1."Feature_9" + 0.03177686408162117 * keras_input_1."Feature_10" + -0.011729570105671883 * keras_input_1."Feature_11" + 0.0715252086520195 * keras_input_1."Feature_12" + -0.18656282126903534 * keras_input_1."Feature_13" + -0.15555837750434875 * keras_input_1."Feature_14" + -0.32712891697883606 * keras_input_1."Feature_15" + -0.16913072764873505 * keras_input_1."Feature_16" + 0.11873380094766617 * keras_input_1."Feature_17" + 0.33451226353645325 * keras_input_1."Feature_18" + -0.12575803697109222 * keras_input_1."Feature_19" + -0.2353323996067047 * keras_input_1."Feature_20" + 0.007410342805087566 * keras_input_1."Feature_21" + -0.28329911828041077 * keras_input_1."Feature_22" + -0.05806510150432587 * keras_input_1."Feature_23" + -0.2778286933898926 * keras_input_1."Feature_24" + 0.10761313140392303 * keras_input_1."Feature_25" + 0.16763964295387268 * keras_input_1."Feature_26" + 0.31717273592948914 * keras_input_1."Feature_27" + 0.1553650051355362 * keras_input_1."Feature_28" + 0.11471176147460938 * keras_input_1."Feature_29" + -0.25095388293266296 * keras_input_1."Feature_30" + 0.34171000123023987 * keras_input_1."Feature_31" + 0.1438939869403839 * keras_input_1."Feature_32" + -0.24569691717624664 * keras_input_1."Feature_33" + 0.01934942416846752 * keras_input_1."Feature_34" + 0.07448847591876984 * keras_input_1."Feature_35" + -0.33684974908828735 * keras_input_1."Feature_36" + -0.1430579125881195 * keras_input_1."Feature_37" + 0.060025904327631 * keras_input_1."Feature_38" + -0.09764634072780609 * keras_input_1."Feature_39" + -0.19551967084407806 * keras_input_1."Feature_40" + -0.2515166699886322 * keras_input_1."Feature_41" + -0.7509978413581848 * keras_input_1."Feature_42" + -0.5288048386573792 * keras_input_1."Feature_43" + -0.13078254461288452 * keras_input_1."Feature_44" + -0.07056205719709396 * keras_input_1."Feature_45" + 0.047719359397888184 * keras_input_1."Feature_46" + -0.2560105621814728 * keras_input_1."Feature_47" + -0.16670779883861542 * keras_input_1."Feature_48" + 0.2812215983867645 * keras_input_1."Feature_49" + -0.1057950109243393 * keras_input_1."Feature_50" + -0.10333546251058578 * keras_input_1."Feature_51" + -0.016382906585931778 * keras_input_1."Feature_52" + 0.054934874176979065 * keras_input_1."Feature_53" + -0.008990001864731312 * keras_input_1."Feature_54" + -0.13639263808727264 * keras_input_1."Feature_55" + 0.04784524440765381 * keras_input_1."Feature_56" + 0.16138480603694916 * keras_input_1."Feature_57" + -0.050027694553136826 * keras_input_1."Feature_58" + -0.10323028266429901 * keras_input_1."Feature_59" + -0.036646611988544464 * keras_input_1."Feature_60" + 0.01621474325656891 * keras_input_1."Feature_61" + -0.11715216934680939 * keras_input_1."Feature_62" + 0.004420616198331118 * keras_input_1."Feature_63" AS output_3, -0.10392346978187561 + -0.011220067739486694 * keras_input_1."Feature_0" + 0.11706963926553726 * keras_input_1."Feature_1" + 0.1961883157491684 * keras_input_1."Feature_2" + 0.1440764218568802 * keras_input_1."Feature_3" + -0.179350808262825 * keras_input_1."Feature_4" + -0.21534866094589233 * keras_input_1."Feature_5" + 0.23380814492702484 * keras_input_1."Feature_6" + -0.07365904003381729 * keras_input_1."Feature_7" + 0.2532922625541687 * keras_input_1."Feature_8" + -0.08101164549589157 * keras_input_1."Feature_9" + 0.008373457938432693 * keras_input_1."Feature_10" + 0.05127435922622681 * keras_input_1."Feature_11" + 0.053558800369501114 * keras_input_1."Feature_12" + -0.20153020322322845 * keras_input_1."Feature_13" + -0.056046243757009506 * keras_input_1."Feature_14" + 0.19633018970489502 * keras_input_1."Feature_15" + -0.2753261923789978 * keras_input_1."Feature_16" + -0.2249688357114792 * keras_input_1."Feature_17" + -0.12201013416051865 * keras_input_1."Feature_18" + 0.14295201003551483 * keras_input_1."Feature_19" + -0.16195331513881683 * keras_input_1."Feature_20" + -0.005454398691654205 * keras_input_1."Feature_21" + 0.06280902773141861 * keras_input_1."Feature_22" + -0.16520506143569946 * keras_input_1."Feature_23" + 0.00608903169631958 * keras_input_1."Feature_24" + 0.05934327468276024 * keras_input_1."Feature_25" + 0.18709786236286163 * keras_input_1."Feature_26" + -0.25602999329566956 * keras_input_1."Feature_27" + -0.028896618634462357 * keras_input_1."Feature_28" + -0.007145581766963005 * keras_input_1."Feature_29" + -0.21324212849140167 * keras_input_1."Feature_30" + -0.22982698678970337 * keras_input_1."Feature_31" + -0.07662053406238556 * keras_input_1."Feature_32" + -0.22862304747104645 * keras_input_1."Feature_33" + 0.017422804608941078 * keras_input_1."Feature_34" + -0.32421940565109253 * keras_input_1."Feature_35" + -0.08407651633024216 * keras_input_1."Feature_36" + 0.06836966425180435 * keras_input_1."Feature_37" + 0.17558440566062927 * keras_input_1."Feature_38" + 0.04019749164581299 * keras_input_1."Feature_39" + 0.11997351050376892 * keras_input_1."Feature_40" + -0.3302948772907257 * keras_input_1."Feature_41" + 0.08653775602579117 * keras_input_1."Feature_42" + 0.009205223061144352 * keras_input_1."Feature_43" + -0.13953951001167297 * keras_input_1."Feature_44" + -0.3080348074436188 * keras_input_1."Feature_45" + 0.13523970544338226 * keras_input_1."Feature_46" + -0.34054437279701233 * keras_input_1."Feature_47" + 0.13225367665290833 * keras_input_1."Feature_48" + -0.3069097697734833 * keras_input_1."Feature_49" + -0.17961643636226654 * keras_input_1."Feature_50" + -0.03270512819290161 * keras_input_1."Feature_51" + 0.031175214797258377 * keras_input_1."Feature_52" + 0.11720341444015503 * keras_input_1."Feature_53" + -0.08420989662408829 * keras_input_1."Feature_54" + 0.13452549278736115 * keras_input_1."Feature_55" + -0.19601738452911377 * keras_input_1."Feature_56" + -0.2684278190135956 * keras_input_1."Feature_57" + -0.10539031773805618 * keras_input_1."Feature_58" + -0.3572843074798584 * keras_input_1."Feature_59" + -0.061842430382966995 * keras_input_1."Feature_60" + 0.023716183379292488 * keras_input_1."Feature_61" + 0.19871701300144196 * keras_input_1."Feature_62" + 0.17799250781536102 * keras_input_1."Feature_63" AS output_4 
FROM keras_input_1), 
activation_relu AS 
(SELECT layer_dense_1."KEY" AS "KEY", greatest(layer_dense_1.output_1, 0) AS output_1, greatest(layer_dense_1.output_2, 0) AS output_2, greatest(layer_dense_1.output_3, 0) AS output_3, greatest(layer_dense_1.output_4, 0) AS output_4 
FROM layer_dense_1), 
activation_relu_1 AS 
(SELECT activation_relu."KEY" AS "KEY", activation_relu.output_1 AS output_1, activation_relu.output_2 AS output_2, activation_relu.output_3 AS output_3, activation_relu.output_4 AS output_4 
FROM activation_relu), 
activation_relu_1_1 AS 
(SELECT activation_relu_1."KEY" AS "KEY", activation_relu_1.output_1 AS output_1, activation_relu_1.output_2 AS output_2, activation_relu_1.output_3 AS output_3, activation_relu_1.output_4 AS output_4 
FROM activation_relu_1), 
layer_dense_2 AS 
(SELECT activation_relu_1_1."KEY" AS "KEY", 0.6775988936424255 + 0.12358804047107697 * activation_relu_1_1.output_1 + -2.121616840362549 * activation_relu_1_1.output_2 + -0.5492324829101562 * activation_relu_1_1.output_3 + 0.17508572340011597 * activation_relu_1_1.output_4 AS output_1, 0.12551404535770416 + 0.6019300818443298 * activation_relu_1_1.output_1 + 0.2922559380531311 * activation_relu_1_1.output_2 + 0.03476012498140335 * activation_relu_1_1.output_3 + 0.5776436924934387 * activation_relu_1_1.output_4 AS output_2, 0.2383481115102768 + 0.042164504528045654 * activation_relu_1_1.output_1 + 0.3205242156982422 * activation_relu_1_1.output_2 + -1.0341511964797974 * activation_relu_1_1.output_3 + -0.24615129828453064 * activation_relu_1_1.output_4 AS output_3, -1.0307670831680298 + -0.08614586293697357 * activation_relu_1_1.output_1 + 0.4545103907585144 * activation_relu_1_1.output_2 + 0.1508633941411972 * activation_relu_1_1.output_3 + 0.3455563187599182 * activation_relu_1_1.output_4 AS output_4, 0.6809206604957581 + -0.05418679118156433 * activation_relu_1_1.output_1 + -0.22937504947185516 * activation_relu_1_1.output_2 + -0.22853979468345642 * activation_relu_1_1.output_3 + 0.1346510499715805 * activation_relu_1_1.output_4 AS output_5, -0.5637176036834717 + -0.28594693541526794 * activation_relu_1_1.output_1 + -0.2451407015323639 * activation_relu_1_1.output_2 + 0.38344788551330566 * activation_relu_1_1.output_3 + -0.119027279317379 * activation_relu_1_1.output_4 AS output_6, 0.6931756138801575 + -0.01639258861541748 * activation_relu_1_1.output_1 + -1.1396172046661377 * activation_relu_1_1.output_2 + -0.49447721242904663 * activation_relu_1_1.output_3 + -0.6102702617645264 * activation_relu_1_1.output_4 AS output_7, -0.6037895679473877 + -0.5726245045661926 * activation_relu_1_1.output_1 + 0.420930951833725 * activation_relu_1_1.output_2 + -0.2916297912597656 * activation_relu_1_1.output_3 + 0.597299337387085 * activation_relu_1_1.output_4 AS output_8, 0.21491947770118713 + 0.5609083771705627 * activation_relu_1_1.output_1 + 0.2585779130458832 * activation_relu_1_1.output_2 + -0.02789447270333767 * activation_relu_1_1.output_3 + -0.5536629557609558 * activation_relu_1_1.output_4 AS output_9, -0.8094841837882996 + -0.6293520331382751 * activation_relu_1_1.output_1 + 0.3483697772026062 * activation_relu_1_1.output_2 + 0.33900144696235657 * activation_relu_1_1.output_3 + -0.4958408772945404 * activation_relu_1_1.output_4 AS output_10 
FROM activation_relu_1_1), 
layer_dense_2_1 AS 
(SELECT layer_dense_2."KEY" AS "KEY", layer_dense_2.output_1 AS output_1, layer_dense_2.output_2 AS output_2, layer_dense_2.output_3 AS output_3, layer_dense_2.output_4 AS output_4, layer_dense_2.output_5 AS output_5, layer_dense_2.output_6 AS output_6, layer_dense_2.output_7 AS output_7, layer_dense_2.output_8 AS output_8, layer_dense_2.output_9 AS output_9, layer_dense_2.output_10 AS output_10 
FROM layer_dense_2), 
score_soft_max_step1 AS 
(SELECT layer_dense_2_1."KEY" AS "KEY", layer_dense_2_1.output_1 AS "Score_0", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_1))) AS "exp_Score_0", layer_dense_2_1.output_2 AS "Score_1", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_2))) AS "exp_Score_1", layer_dense_2_1.output_3 AS "Score_2", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_3))) AS "exp_Score_2", layer_dense_2_1.output_4 AS "Score_3", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_4))) AS "exp_Score_3", layer_dense_2_1.output_5 AS "Score_4", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_5))) AS "exp_Score_4", layer_dense_2_1.output_6 AS "Score_5", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_6))) AS "exp_Score_5", layer_dense_2_1.output_7 AS "Score_6", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_7))) AS "exp_Score_6", layer_dense_2_1.output_8 AS "Score_7", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_8))) AS "exp_Score_7", layer_dense_2_1.output_9 AS "Score_8", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_9))) AS "exp_Score_8", layer_dense_2_1.output_10 AS "Score_9", exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_10))) AS "exp_Score_9" 
FROM layer_dense_2_1), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_Score" AS "exp_Score" 
FROM (SELECT score_soft_max_step1."KEY" AS "KEY", 0 AS class, score_soft_max_step1."exp_Score_0" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 1 AS class, score_soft_max_step1."exp_Score_1" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 2 AS class, score_soft_max_step1."exp_Score_2" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 3 AS class, score_soft_max_step1."exp_Score_3" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 4 AS class, score_soft_max_step1."exp_Score_4" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 5 AS class, score_soft_max_step1."exp_Score_5" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 6 AS class, score_soft_max_step1."exp_Score_6" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 7 AS class, score_soft_max_step1."exp_Score_7" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 8 AS class, score_soft_max_step1."exp_Score_8" AS "exp_Score" 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1."KEY" AS "KEY", 9 AS class, score_soft_max_step1."exp_Score_9" AS "exp_Score" 
FROM score_soft_max_step1) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_step1."KEY" AS "KEY", score_soft_max_step1."Score_0" AS "Score_0", score_soft_max_step1."exp_Score_0" AS "exp_Score_0", score_soft_max_step1."Score_1" AS "Score_1", score_soft_max_step1."exp_Score_1" AS "exp_Score_1", score_soft_max_step1."Score_2" AS "Score_2", score_soft_max_step1."exp_Score_2" AS "exp_Score_2", score_soft_max_step1."Score_3" AS "Score_3", score_soft_max_step1."exp_Score_3" AS "exp_Score_3", score_soft_max_step1."Score_4" AS "Score_4", score_soft_max_step1."exp_Score_4" AS "exp_Score_4", score_soft_max_step1."Score_5" AS "Score_5", score_soft_max_step1."exp_Score_5" AS "exp_Score_5", score_soft_max_step1."Score_6" AS "Score_6", score_soft_max_step1."exp_Score_6" AS "exp_Score_6", score_soft_max_step1."Score_7" AS "Score_7", score_soft_max_step1."exp_Score_7" AS "exp_Score_7", score_soft_max_step1."Score_8" AS "Score_8", score_soft_max_step1."exp_Score_8" AS "exp_Score_8", score_soft_max_step1."Score_9" AS "Score_9", score_soft_max_step1."exp_Score_9" AS "exp_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpScore" AS "sum_ExpScore" 
FROM score_soft_max_step1 LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_Score") AS "sum_ExpScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") sum_exp_t ON score_soft_max_step1."KEY" = sum_exp_t."KEY_sum"), 
layer_softmax AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."exp_Score_0" / score_soft_max."sum_ExpScore" AS output_1, score_soft_max."exp_Score_1" / score_soft_max."sum_ExpScore" AS output_2, score_soft_max."exp_Score_2" / score_soft_max."sum_ExpScore" AS output_3, score_soft_max."exp_Score_3" / score_soft_max."sum_ExpScore" AS output_4, score_soft_max."exp_Score_4" / score_soft_max."sum_ExpScore" AS output_5, score_soft_max."exp_Score_5" / score_soft_max."sum_ExpScore" AS output_6, score_soft_max."exp_Score_6" / score_soft_max."sum_ExpScore" AS output_7, score_soft_max."exp_Score_7" / score_soft_max."sum_ExpScore" AS output_8, score_soft_max."exp_Score_8" / score_soft_max."sum_ExpScore" AS output_9, score_soft_max."exp_Score_9" / score_soft_max."sum_ExpScore" AS output_10 
FROM score_soft_max), 
orig_cte AS 
(SELECT layer_softmax."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", CAST(NULL AS BINARY_DOUBLE) AS "Score_4", CAST(NULL AS BINARY_DOUBLE) AS "Score_5", CAST(NULL AS BINARY_DOUBLE) AS "Score_6", CAST(NULL AS BINARY_DOUBLE) AS "Score_7", CAST(NULL AS BINARY_DOUBLE) AS "Score_8", CAST(NULL AS BINARY_DOUBLE) AS "Score_9", layer_softmax.output_1 AS "Proba_0", layer_softmax.output_2 AS "Proba_1", layer_softmax.output_3 AS "Proba_2", layer_softmax.output_4 AS "Proba_3", layer_softmax.output_5 AS "Proba_4", layer_softmax.output_6 AS "Proba_5", layer_softmax.output_7 AS "Proba_6", layer_softmax.output_8 AS "Proba_7", layer_softmax.output_9 AS "Proba_8", layer_softmax.output_10 AS "Proba_9", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_4", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_5", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_6", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_7", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_8", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_9", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM layer_softmax), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_9", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte