-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : KerasClassifier_Dense
-- Dataset : BinaryClass_10
-- Database : mysql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH keras_input AS 
(SELECT `ADS`.`KEY` AS `KEY`, `ADS`.`Feature_0` AS `Feature_0`, `ADS`.`Feature_1` AS `Feature_1`, `ADS`.`Feature_2` AS `Feature_2`, `ADS`.`Feature_3` AS `Feature_3`, `ADS`.`Feature_4` AS `Feature_4`, `ADS`.`Feature_5` AS `Feature_5`, `ADS`.`Feature_6` AS `Feature_6`, `ADS`.`Feature_7` AS `Feature_7`, `ADS`.`Feature_8` AS `Feature_8`, `ADS`.`Feature_9` AS `Feature_9` 
FROM `BinaryClass_10` AS `ADS`), 
keras_input_1 AS 
(SELECT keras_input.`KEY` AS `KEY`, keras_input.`Feature_0` AS `Feature_0`, keras_input.`Feature_1` AS `Feature_1`, keras_input.`Feature_2` AS `Feature_2`, keras_input.`Feature_3` AS `Feature_3`, keras_input.`Feature_4` AS `Feature_4`, keras_input.`Feature_5` AS `Feature_5`, keras_input.`Feature_6` AS `Feature_6`, keras_input.`Feature_7` AS `Feature_7`, keras_input.`Feature_8` AS `Feature_8`, keras_input.`Feature_9` AS `Feature_9` 
FROM keras_input), 
layer_dense_1 AS 
(SELECT keras_input_1.`KEY` AS `KEY`, -0.14339883625507355 + 0.31405529379844666 * keras_input_1.`Feature_0` + 0.257694274187088 * keras_input_1.`Feature_1` + 0.3600189685821533 * keras_input_1.`Feature_2` + 0.2516701817512512 * keras_input_1.`Feature_3` + -0.35229238867759705 * keras_input_1.`Feature_4` + -0.08705901354551315 * keras_input_1.`Feature_5` + -0.49015119671821594 * keras_input_1.`Feature_6` + -0.2873319089412689 * keras_input_1.`Feature_7` + 0.22069384157657623 * keras_input_1.`Feature_8` + -0.6248313188552856 * keras_input_1.`Feature_9` AS output_1, -0.07926926016807556 + -0.15834978222846985 * keras_input_1.`Feature_0` + 0.6118381023406982 * keras_input_1.`Feature_1` + 0.612257182598114 * keras_input_1.`Feature_2` + -0.43179917335510254 * keras_input_1.`Feature_3` + 0.453037828207016 * keras_input_1.`Feature_4` + 0.48063185811042786 * keras_input_1.`Feature_5` + -0.35877853631973267 * keras_input_1.`Feature_6` + 0.5657870769500732 * keras_input_1.`Feature_7` + 0.14957769215106964 * keras_input_1.`Feature_8` + 0.14306432008743286 * keras_input_1.`Feature_9` AS output_2, -0.14079204201698303 + 0.2555255591869354 * keras_input_1.`Feature_0` + 0.4899764060974121 * keras_input_1.`Feature_1` + 0.23593533039093018 * keras_input_1.`Feature_2` + 0.10356294363737106 * keras_input_1.`Feature_3` + -3.6582790926331654e-05 * keras_input_1.`Feature_4` + -0.052880171686410904 * keras_input_1.`Feature_5` + 0.27986985445022583 * keras_input_1.`Feature_6` + 0.29935431480407715 * keras_input_1.`Feature_7` + 0.12603265047073364 * keras_input_1.`Feature_8` + 0.18215344846248627 * keras_input_1.`Feature_9` AS output_3, 0.1279856413602829 + -0.46295011043548584 * keras_input_1.`Feature_0` + 0.3999893367290497 * keras_input_1.`Feature_1` + 0.6799516677856445 * keras_input_1.`Feature_2` + 0.2209230661392212 * keras_input_1.`Feature_3` + 0.15777789056301117 * keras_input_1.`Feature_4` + -0.5702016949653625 * keras_input_1.`Feature_5` + 0.10895366221666336 * keras_input_1.`Feature_6` + -0.8459658622741699 * keras_input_1.`Feature_7` + -0.1523556262254715 * keras_input_1.`Feature_8` + 0.031278278678655624 * keras_input_1.`Feature_9` AS output_4 
FROM keras_input_1), 
activation_relu AS 
(SELECT layer_dense_1.`KEY` AS `KEY`, greatest(layer_dense_1.output_1, 0) AS output_1, greatest(layer_dense_1.output_2, 0) AS output_2, greatest(layer_dense_1.output_3, 0) AS output_3, greatest(layer_dense_1.output_4, 0) AS output_4 
FROM layer_dense_1), 
activation_relu_1 AS 
(SELECT activation_relu.`KEY` AS `KEY`, activation_relu.output_1 AS output_1, activation_relu.output_2 AS output_2, activation_relu.output_3 AS output_3, activation_relu.output_4 AS output_4 
FROM activation_relu), 
activation_relu_1_1 AS 
(SELECT activation_relu_1.`KEY` AS `KEY`, activation_relu_1.output_1 AS output_1, activation_relu_1.output_2 AS output_2, activation_relu_1.output_3 AS output_3, activation_relu_1.output_4 AS output_4 
FROM activation_relu_1), 
layer_dense_2 AS 
(SELECT activation_relu_1_1.`KEY` AS `KEY`, -0.10557498782873154 + 0.33992791175842285 * activation_relu_1_1.output_1 + -0.03926357999444008 * activation_relu_1_1.output_2 + 0.14607954025268555 * activation_relu_1_1.output_3 + -0.3200143575668335 * activation_relu_1_1.output_4 AS output_1, 0.10557499527931213 + -0.6482995748519897 * activation_relu_1_1.output_1 + -0.07952513545751572 * activation_relu_1_1.output_2 + -0.617456316947937 * activation_relu_1_1.output_3 + 0.3567577600479126 * activation_relu_1_1.output_4 AS output_2 
FROM activation_relu_1_1), 
layer_dense_2_1 AS 
(SELECT layer_dense_2.`KEY` AS `KEY`, layer_dense_2.output_1 AS output_1, layer_dense_2.output_2 AS output_2 
FROM layer_dense_2), 
score_soft_max_step1 AS 
(SELECT layer_dense_2_1.`KEY` AS `KEY`, layer_dense_2_1.output_1 AS `Score_0`, exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_1))) AS `exp_Score_0`, layer_dense_2_1.output_2 AS `Score_1`, exp(least(100.0, greatest(-100.0, layer_dense_2_1.output_2))) AS `exp_Score_1` 
FROM layer_dense_2_1), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_Score` AS `exp_Score` 
FROM (SELECT score_soft_max_step1.`KEY` AS `KEY`, 0 AS class, score_soft_max_step1.`exp_Score_0` AS `exp_Score` 
FROM score_soft_max_step1 UNION ALL SELECT score_soft_max_step1.`KEY` AS `KEY`, 1 AS class, score_soft_max_step1.`exp_Score_1` AS `exp_Score` 
FROM score_soft_max_step1) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_step1.`KEY` AS `KEY`, score_soft_max_step1.`Score_0` AS `Score_0`, score_soft_max_step1.`exp_Score_0` AS `exp_Score_0`, score_soft_max_step1.`Score_1` AS `Score_1`, score_soft_max_step1.`exp_Score_1` AS `exp_Score_1`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpScore` AS `sum_ExpScore` 
FROM score_soft_max_step1 LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_Score`) AS `sum_ExpScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_step1.`KEY` = sum_exp_t.`KEY_sum`), 
layer_softmax AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`exp_Score_0` / score_soft_max.`sum_ExpScore` AS output_1, score_soft_max.`exp_Score_1` / score_soft_max.`sum_ExpScore` AS output_2 
FROM score_soft_max), 
orig_cte AS 
(SELECT layer_softmax.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, layer_softmax.output_1 AS `Proba_0`, layer_softmax.output_2 AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM layer_softmax), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, max(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` <= union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte