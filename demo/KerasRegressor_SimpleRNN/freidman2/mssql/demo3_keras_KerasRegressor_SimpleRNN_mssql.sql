-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : KerasRegressor_SimpleRNN
-- Dataset : freidman2
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH keras_input AS 
(SELECT [ADS].[KEY] AS [KEY], [ADS].[Feature_0] AS [Feature_0], [ADS].[Feature_1] AS [Feature_1], [ADS].[Feature_2] AS [Feature_2], [ADS].[Feature_3] AS [Feature_3] 
FROM freidman2 AS [ADS]), 
keras_input_1 AS 
(SELECT keras_input.[KEY] AS [KEY], keras_input.[Feature_0] AS [Feature_0], keras_input.[Feature_1] AS [Feature_1], keras_input.[Feature_2] AS [Feature_2], keras_input.[Feature_3] AS [Feature_3] 
FROM keras_input), 
keras_input_1_rn AS 
(SELECT row_number() OVER (ORDER BY keras_input_1.[KEY] ASC) AS rn, keras_input_1.[KEY] AS [KEY], keras_input_1.[Feature_0] AS [Feature_0], keras_input_1.[Feature_1] AS [Feature_1], keras_input_1.[Feature_2] AS [Feature_2], keras_input_1.[Feature_3] AS [Feature_3] 
FROM keras_input_1), 
input_kernel_bias AS 
(SELECT keras_input_1_rn.rn AS rn, keras_input_1_rn.[KEY] AS [KEY], keras_input_1_rn.[Feature_0] AS [Feature_0], keras_input_1_rn.[Feature_1] AS [Feature_1], keras_input_1_rn.[Feature_2] AS [Feature_2], keras_input_1_rn.[Feature_3] AS [Feature_3], 0.45910656358715324 + 1.1960373825867299 * keras_input_1_rn.[Feature_0] + -0.032886544260084624 * keras_input_1_rn.[Feature_1] + 1.1125563608224769 * keras_input_1_rn.[Feature_2] + 0.5043350934502283 * keras_input_1_rn.[Feature_3] AS dot_prod_1, -0.40169056578349654 + -1.0654208547948794 * keras_input_1_rn.[Feature_0] + 0.5276607304105705 * keras_input_1_rn.[Feature_1] + -0.29071807572165365 * keras_input_1_rn.[Feature_2] + -0.8141430793557988 * keras_input_1_rn.[Feature_3] AS dot_prod_2 
FROM keras_input_1_rn), 
rnn_cte_simple_rnn_1(rn_1, [KEY], [PreviousState_1], [PreviousState_2], output_1, output_2, [State_1], [State_2]) AS 
(SELECT input_kernel_bias.rn AS rn_1, input_kernel_bias.[KEY] AS [KEY], CAST(0.0 AS FLOAT(53)) AS [PreviousState_1], CAST(0.0 AS FLOAT(53)) AS [PreviousState_2], input_kernel_bias.dot_prod_1 + 0.0 AS output_1, input_kernel_bias.dot_prod_2 + 0.0 AS output_2, input_kernel_bias.dot_prod_1 + 0.0 AS [State_1], input_kernel_bias.dot_prod_2 + 0.0 AS [State_2] 
FROM input_kernel_bias 
WHERE input_kernel_bias.rn = 1 UNION ALL SELECT input_kernel_bias.rn AS rn, input_kernel_bias.[KEY] AS [KEY], rnn_cte_simple_rnn_1.[State_1] AS [PreviousState_1], rnn_cte_simple_rnn_1.[State_2] AS [PreviousState_2], input_kernel_bias.dot_prod_1 + -0.6782603803720142 * rnn_cte_simple_rnn_1.[State_1] + 0.6409955093723881 * rnn_cte_simple_rnn_1.[State_2] AS output_1, input_kernel_bias.dot_prod_2 + 0.23319803947154072 * rnn_cte_simple_rnn_1.[State_1] + 0.7146888036380843 * rnn_cte_simple_rnn_1.[State_2] AS output_2, input_kernel_bias.dot_prod_1 + -0.6782603803720142 * rnn_cte_simple_rnn_1.[State_1] + 0.6409955093723881 * rnn_cte_simple_rnn_1.[State_2] AS [State_1], input_kernel_bias.dot_prod_2 + 0.23319803947154072 * rnn_cte_simple_rnn_1.[State_1] + 0.7146888036380843 * rnn_cte_simple_rnn_1.[State_2] AS [State_2] 
FROM input_kernel_bias, rnn_cte_simple_rnn_1 
WHERE input_kernel_bias.rn = rnn_cte_simple_rnn_1.rn_1 + 1), 
simple_rnn_1 AS 
(SELECT rnn_cte_simple_rnn_1.[KEY] AS [KEY], CAST(rnn_cte_simple_rnn_1.output_1 AS FLOAT(53)) AS output_1, CAST(rnn_cte_simple_rnn_1.output_2 AS FLOAT(53)) AS output_2 
FROM rnn_cte_simple_rnn_1), 
simple_rnn_1_1 AS 
(SELECT simple_rnn_1.[KEY] AS [KEY], simple_rnn_1.output_1 AS output_1, simple_rnn_1.output_2 AS output_2 
FROM simple_rnn_1), 
layer_dense_1 AS 
(SELECT simple_rnn_1_1.[KEY] AS [KEY], 0.4366021002953075 + 1.5298254087943157 * simple_rnn_1_1.output_1 + -0.7148772162364774 * simple_rnn_1_1.output_2 AS output_1 
FROM simple_rnn_1_1)
 SELECT layer_dense_1.[KEY] AS [KEY], layer_dense_1.output_1 AS [Estimator] 
FROM layer_dense_1