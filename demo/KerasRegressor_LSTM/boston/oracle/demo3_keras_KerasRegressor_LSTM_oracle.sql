-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : KerasRegressor_LSTM
-- Dataset : boston
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH keras_input AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9", "ADS"."Feature_10" AS "Feature_10", "ADS"."Feature_11" AS "Feature_11", "ADS"."Feature_12" AS "Feature_12" 
FROM "BOSTON" "ADS"), 
keras_input_1 AS 
(SELECT keras_input."KEY" AS "KEY", keras_input."Feature_0" AS "Feature_0", keras_input."Feature_1" AS "Feature_1", keras_input."Feature_2" AS "Feature_2", keras_input."Feature_3" AS "Feature_3", keras_input."Feature_4" AS "Feature_4", keras_input."Feature_5" AS "Feature_5", keras_input."Feature_6" AS "Feature_6", keras_input."Feature_7" AS "Feature_7", keras_input."Feature_8" AS "Feature_8", keras_input."Feature_9" AS "Feature_9", keras_input."Feature_10" AS "Feature_10", keras_input."Feature_11" AS "Feature_11", keras_input."Feature_12" AS "Feature_12" 
FROM keras_input), 
keras_input_1_rn AS 
(SELECT row_number() OVER (ORDER BY keras_input_1."KEY" ASC) AS rn, keras_input_1."KEY" AS "KEY", keras_input_1."Feature_0" AS "Feature_0", keras_input_1."Feature_1" AS "Feature_1", keras_input_1."Feature_2" AS "Feature_2", keras_input_1."Feature_3" AS "Feature_3", keras_input_1."Feature_4" AS "Feature_4", keras_input_1."Feature_5" AS "Feature_5", keras_input_1."Feature_6" AS "Feature_6", keras_input_1."Feature_7" AS "Feature_7", keras_input_1."Feature_8" AS "Feature_8", keras_input_1."Feature_9" AS "Feature_9", keras_input_1."Feature_10" AS "Feature_10", keras_input_1."Feature_11" AS "Feature_11", keras_input_1."Feature_12" AS "Feature_12" 
FROM keras_input_1), 
lstm_input_kernel_bias AS 
(SELECT keras_input_1_rn.rn AS rn, keras_input_1_rn."KEY" AS "KEY", keras_input_1_rn."Feature_0" AS "Feature_0", keras_input_1_rn."Feature_1" AS "Feature_1", keras_input_1_rn."Feature_2" AS "Feature_2", keras_input_1_rn."Feature_3" AS "Feature_3", keras_input_1_rn."Feature_4" AS "Feature_4", keras_input_1_rn."Feature_5" AS "Feature_5", keras_input_1_rn."Feature_6" AS "Feature_6", keras_input_1_rn."Feature_7" AS "Feature_7", keras_input_1_rn."Feature_8" AS "Feature_8", keras_input_1_rn."Feature_9" AS "Feature_9", keras_input_1_rn."Feature_10" AS "Feature_10", keras_input_1_rn."Feature_11" AS "Feature_11", keras_input_1_rn."Feature_12" AS "Feature_12", -0.03642863568473653 + 0.3650707279533536 * keras_input_1_rn."Feature_0" + 0.44638977987986944 * keras_input_1_rn."Feature_1" + -0.34570575972200973 * keras_input_1_rn."Feature_2" + -0.28481807349342664 * keras_input_1_rn."Feature_3" + -0.40727162770539443 * keras_input_1_rn."Feature_4" + 0.08701648559573352 * keras_input_1_rn."Feature_5" + 0.22472126380627308 * keras_input_1_rn."Feature_6" + -0.2369187244372049 * keras_input_1_rn."Feature_7" + -0.33683213689296615 * keras_input_1_rn."Feature_8" + 0.0006938783864774379 * keras_input_1_rn."Feature_9" + -0.14940579069886434 * keras_input_1_rn."Feature_10" + -0.04918990699885182 * keras_input_1_rn."Feature_11" + 0.4070593793395458 * keras_input_1_rn."Feature_12" AS dot_prod_i_1, 0.036239586850588895 + -0.3137729923441221 * keras_input_1_rn."Feature_0" + 0.0495627580246344 * keras_input_1_rn."Feature_1" + 0.10391673859402795 * keras_input_1_rn."Feature_2" + -0.03386497733030218 * keras_input_1_rn."Feature_3" + 0.41192338657793953 * keras_input_1_rn."Feature_4" + -0.14933830113663943 * keras_input_1_rn."Feature_5" + -0.03880910829422073 * keras_input_1_rn."Feature_6" + 0.07588287965714313 * keras_input_1_rn."Feature_7" + -0.3446500187658365 * keras_input_1_rn."Feature_8" + 0.12674188785446944 * keras_input_1_rn."Feature_9" + 0.42247472942558534 * keras_input_1_rn."Feature_10" + -0.20592812087435636 * keras_input_1_rn."Feature_11" + 0.31304453606454447 * keras_input_1_rn."Feature_12" AS dot_prod_i_2, 0.005106950776931154 + -0.22506504558142526 * keras_input_1_rn."Feature_0" + -0.21598358371766935 * keras_input_1_rn."Feature_1" + -0.14942917242064369 * keras_input_1_rn."Feature_2" + -0.4800719824426711 * keras_input_1_rn."Feature_3" + -0.3735537526730611 * keras_input_1_rn."Feature_4" + 0.3995934978535246 * keras_input_1_rn."Feature_5" + -0.036846805326249295 * keras_input_1_rn."Feature_6" + 0.06325695699019235 * keras_input_1_rn."Feature_7" + -0.23417552747005524 * keras_input_1_rn."Feature_8" + 0.38872120041810815 * keras_input_1_rn."Feature_9" + -0.32137123347428703 * keras_input_1_rn."Feature_10" + -0.004884708820108983 * keras_input_1_rn."Feature_11" + 0.4489112989656189 * keras_input_1_rn."Feature_12" AS dot_prod_i_3, 1.0 + 0.4443694273207415 * keras_input_1_rn."Feature_0" + 0.4646261234683514 * keras_input_1_rn."Feature_1" + -0.07634619490385536 * keras_input_1_rn."Feature_2" + 0.1496297220017394 * keras_input_1_rn."Feature_3" + 0.16961150163077943 * keras_input_1_rn."Feature_4" + 0.3395816089577316 * keras_input_1_rn."Feature_5" + -0.08826073755271602 * keras_input_1_rn."Feature_6" + 0.30585189589227846 * keras_input_1_rn."Feature_7" + 0.27897602929847576 * keras_input_1_rn."Feature_8" + 0.02411551955594693 * keras_input_1_rn."Feature_9" + 0.4547447473443923 * keras_input_1_rn."Feature_10" + 0.29059425683182105 * keras_input_1_rn."Feature_11" + -0.07062491214460587 * keras_input_1_rn."Feature_12" AS dot_prod_f_1, 0.98787982800147 + 0.3307229598758466 * keras_input_1_rn."Feature_0" + 0.47218623379019153 * keras_input_1_rn."Feature_1" + 0.19003297894180785 * keras_input_1_rn."Feature_2" + -0.01741691885652337 * keras_input_1_rn."Feature_3" + -0.16510228792058465 * keras_input_1_rn."Feature_4" + 0.40116992979440325 * keras_input_1_rn."Feature_5" + 0.11583719636201045 * keras_input_1_rn."Feature_6" + -0.35016189596920383 * keras_input_1_rn."Feature_7" + -0.4965327713381513 * keras_input_1_rn."Feature_8" + -0.01986944172086621 * keras_input_1_rn."Feature_9" + 0.2776293382156895 * keras_input_1_rn."Feature_10" + -0.027890160785781288 * keras_input_1_rn."Feature_11" + 0.020254967204881947 * keras_input_1_rn."Feature_12" AS dot_prod_f_2, 0.9718289262724434 + 0.013881483047911189 * keras_input_1_rn."Feature_0" + -0.3465889648198675 * keras_input_1_rn."Feature_1" + -0.07609378652424992 * keras_input_1_rn."Feature_2" + 0.3040591990985694 * keras_input_1_rn."Feature_3" + -0.2460210494100777 * keras_input_1_rn."Feature_4" + 0.15969417688882606 * keras_input_1_rn."Feature_5" + 0.3168165537292578 * keras_input_1_rn."Feature_6" + -0.019525006790137883 * keras_input_1_rn."Feature_7" + -0.03857147815019844 * keras_input_1_rn."Feature_8" + -0.17069572034121167 * keras_input_1_rn."Feature_9" + -0.17770134572101343 * keras_input_1_rn."Feature_10" + -0.42579049984491996 * keras_input_1_rn."Feature_11" + 0.19898273594838262 * keras_input_1_rn."Feature_12" AS dot_prod_f_3, 0.06594214932807027 + 0.11161099272374542 * keras_input_1_rn."Feature_0" + 0.23956966757714812 * keras_input_1_rn."Feature_1" + 0.1535391202522585 * keras_input_1_rn."Feature_2" + -0.3318862756773039 * keras_input_1_rn."Feature_3" + -0.031158373022503263 * keras_input_1_rn."Feature_4" + 0.24430834484834973 * keras_input_1_rn."Feature_5" + 0.2249077142571839 * keras_input_1_rn."Feature_6" + -0.3993078696127363 * keras_input_1_rn."Feature_7" + -0.11219750569061733 * keras_input_1_rn."Feature_8" + 0.169639131102148 * keras_input_1_rn."Feature_9" + 0.2772870407238386 * keras_input_1_rn."Feature_10" + -0.4135006585412748 * keras_input_1_rn."Feature_11" + -0.15275310337876158 * keras_input_1_rn."Feature_12" AS dot_prod_c_1, 0.6652676595523087 + 0.21063196184039176 * keras_input_1_rn."Feature_0" + -0.2586918769784513 * keras_input_1_rn."Feature_1" + 0.6386325775029211 * keras_input_1_rn."Feature_2" + -0.20915256508665928 * keras_input_1_rn."Feature_3" + 0.6283166044611901 * keras_input_1_rn."Feature_4" + 1.1003400324900678 * keras_input_1_rn."Feature_5" + 0.8987856412778654 * keras_input_1_rn."Feature_6" + 0.09878886391700976 * keras_input_1_rn."Feature_7" + 0.27136956034167675 * keras_input_1_rn."Feature_8" + 0.2976349822526414 * keras_input_1_rn."Feature_9" + 0.20977527431958917 * keras_input_1_rn."Feature_10" + 0.581739908606352 * keras_input_1_rn."Feature_11" + 0.19773565687640254 * keras_input_1_rn."Feature_12" AS dot_prod_c_2, -0.4927789362933854 + -0.45991975332598334 * keras_input_1_rn."Feature_0" + -0.7614179632109197 * keras_input_1_rn."Feature_1" + 0.023317122710880354 * keras_input_1_rn."Feature_2" + 0.29310853646515067 * keras_input_1_rn."Feature_3" + -0.017157221964541572 * keras_input_1_rn."Feature_4" + -0.8084673725311878 * keras_input_1_rn."Feature_5" + -0.39808316198251026 * keras_input_1_rn."Feature_6" + -0.1865444485013329 * keras_input_1_rn."Feature_7" + -0.31949439885400066 * keras_input_1_rn."Feature_8" + -0.005248158848444598 * keras_input_1_rn."Feature_9" + -0.8142590830015433 * keras_input_1_rn."Feature_10" + -0.760204285550787 * keras_input_1_rn."Feature_11" + -0.3422528337778031 * keras_input_1_rn."Feature_12" AS dot_prod_c_3, -0.021590824539855783 + -0.023158692019209146 * keras_input_1_rn."Feature_0" + -0.40697627547137777 * keras_input_1_rn."Feature_1" + 0.021702736873699776 * keras_input_1_rn."Feature_2" + -0.08813721140609704 * keras_input_1_rn."Feature_3" + -0.3105882946728207 * keras_input_1_rn."Feature_4" + 0.33798057425290956 * keras_input_1_rn."Feature_5" + -0.38431962358696065 * keras_input_1_rn."Feature_6" + 0.44810452727442684 * keras_input_1_rn."Feature_7" + 0.06918027381999572 * keras_input_1_rn."Feature_8" + -0.39362848654805227 * keras_input_1_rn."Feature_9" + 0.054378141760421106 * keras_input_1_rn."Feature_10" + 0.2321051853578451 * keras_input_1_rn."Feature_11" + -0.4783818867972506 * keras_input_1_rn."Feature_12" AS dot_prod_o_1, 0.0330791943846669 + 0.07134759921677665 * keras_input_1_rn."Feature_0" + -0.3127183282875393 * keras_input_1_rn."Feature_1" + -0.42218819005536073 * keras_input_1_rn."Feature_2" + -0.30071618236803166 * keras_input_1_rn."Feature_3" + -0.16297813598474395 * keras_input_1_rn."Feature_4" + -0.33997906203701095 * keras_input_1_rn."Feature_5" + -0.26250970056502787 * keras_input_1_rn."Feature_6" + 0.0756357233817634 * keras_input_1_rn."Feature_7" + 0.48800918524792675 * keras_input_1_rn."Feature_8" + 0.09788572021265621 * keras_input_1_rn."Feature_9" + 0.07441593253190579 * keras_input_1_rn."Feature_10" + 0.23183691114636854 * keras_input_1_rn."Feature_11" + 0.2584610692883942 * keras_input_1_rn."Feature_12" AS dot_prod_o_2, 0.0 + 0.07760192455279458 * keras_input_1_rn."Feature_0" + 0.2686883696102834 * keras_input_1_rn."Feature_1" + -0.32402839742278877 * keras_input_1_rn."Feature_2" + -0.05903169824065113 * keras_input_1_rn."Feature_3" + 0.478094283363944 * keras_input_1_rn."Feature_4" + 0.4370893102836152 * keras_input_1_rn."Feature_5" + -0.41550795656107664 * keras_input_1_rn."Feature_6" + -0.17017400209239503 * keras_input_1_rn."Feature_7" + -0.1246737917372055 * keras_input_1_rn."Feature_8" + 0.37707590056388907 * keras_input_1_rn."Feature_9" + 0.023039504510632636 * keras_input_1_rn."Feature_10" + 0.39583066086809626 * keras_input_1_rn."Feature_11" + -0.20080381267702035 * keras_input_1_rn."Feature_12" AS dot_prod_o_3 
FROM keras_input_1_rn), 
rnn_cte_lstm_1(rn_1, "KEY", "PreviousState_1", "PreviousState_2", "PreviousState_3", "PreviousState_4", "PreviousState_5", "PreviousState_6", "State_1", "State_2", "State_3", "State_4", "State_5", "State_6") AS 
(SELECT lstm_input_kernel_bias.rn AS rn_1, lstm_input_kernel_bias."KEY" AS "KEY", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_1", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_2", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_3", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_4", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_5", CAST(0.0 AS BINARY_DOUBLE) AS "PreviousState_6", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_1 + 0.0) + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_1 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_1 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_1 + 0.0) + 0.5)) * 0.0) AS "State_1", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_2 + 0.0) + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_2 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_2 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_2 + 0.0) + 0.5)) * 0.0) AS "State_2", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_3 + 0.0) + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_3 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_3 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_3 + 0.0) + 0.5)) * 0.0) AS "State_3", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_1 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_1 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_1 + 0.0) + 0.5)) * 0.0 AS "State_4", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_2 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_2 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_2 + 0.0) + 0.5)) * 0.0 AS "State_5", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_3 + 0.0) + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_3 + 0.0) + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_3 + 0.0) + 0.5)) * 0.0 AS "State_6" 
FROM lstm_input_kernel_bias 
WHERE lstm_input_kernel_bias.rn = 1 UNION ALL SELECT lstm_input_kernel_bias.rn AS rn, lstm_input_kernel_bias."KEY" AS "KEY", rnn_cte_lstm_1."State_1" AS "PreviousState_1", rnn_cte_lstm_1."State_2" AS "PreviousState_2", rnn_cte_lstm_1."State_3" AS "PreviousState_3", rnn_cte_lstm_1."State_4" AS "PreviousState_4", rnn_cte_lstm_1."State_5" AS "PreviousState_5", rnn_cte_lstm_1."State_6" AS "PreviousState_6", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_1 + 0.06892590036096884 * rnn_cte_lstm_1."State_1" + 0.3201097265145862 * rnn_cte_lstm_1."State_2" + 0.434776116853543 * rnn_cte_lstm_1."State_3") + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_1 + 0.7914401327582538 * rnn_cte_lstm_1."State_1" + -0.0836734054766744 * rnn_cte_lstm_1."State_2" + -0.13584622806920507 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_1 + -0.1334486160967202 * rnn_cte_lstm_1."State_1" + 0.30578315449412097 * rnn_cte_lstm_1."State_2" + 0.3199019503015645 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_1 + -0.044992728113694716 * rnn_cte_lstm_1."State_1" + 0.36503691704501695 * rnn_cte_lstm_1."State_2" + -0.013276180962666487 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_4") AS "State_1", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_2 + -0.1961862940305749 * rnn_cte_lstm_1."State_1" + -0.2693742356233283 * rnn_cte_lstm_1."State_2" + 0.19929633656312232 * rnn_cte_lstm_1."State_3") + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_2 + -0.10382943944280623 * rnn_cte_lstm_1."State_1" + -0.16365270799866424 * rnn_cte_lstm_1."State_2" + 0.16402008709376367 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_2 + 0.28769341075719534 * rnn_cte_lstm_1."State_1" + -0.0009869204367618928 * rnn_cte_lstm_1."State_2" + 0.6025957605766488 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_2 + -0.18826274702944504 * rnn_cte_lstm_1."State_1" + -0.07433004745088768 * rnn_cte_lstm_1."State_2" + 0.48315068336305544 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_5") AS "State_2", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_o_3 + -0.17187513590272432 * rnn_cte_lstm_1."State_1" + 0.008141609324755723 * rnn_cte_lstm_1."State_2" + -0.32570420998469124 * rnn_cte_lstm_1."State_3") + 0.5)) * (greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_3 + -0.19968731062397982 * rnn_cte_lstm_1."State_1" + 0.29050618908944825 * rnn_cte_lstm_1."State_2" + -0.3223838401834089 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_3 + 0.17659892760961093 * rnn_cte_lstm_1."State_1" + -0.15034169326845848 * rnn_cte_lstm_1."State_2" + -0.26352015043366184 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_3 + -0.030264955798362903 * rnn_cte_lstm_1."State_1" + 0.535884028160765 * rnn_cte_lstm_1."State_2" + -0.2720818605943181 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_6") AS "State_3", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_1 + 0.7914401327582538 * rnn_cte_lstm_1."State_1" + -0.0836734054766744 * rnn_cte_lstm_1."State_2" + -0.13584622806920507 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_1 + -0.1334486160967202 * rnn_cte_lstm_1."State_1" + 0.30578315449412097 * rnn_cte_lstm_1."State_2" + 0.3199019503015645 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_1 + -0.044992728113694716 * rnn_cte_lstm_1."State_1" + 0.36503691704501695 * rnn_cte_lstm_1."State_2" + -0.013276180962666487 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_4" AS "State_4", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_2 + -0.10382943944280623 * rnn_cte_lstm_1."State_1" + -0.16365270799866424 * rnn_cte_lstm_1."State_2" + 0.16402008709376367 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_2 + 0.28769341075719534 * rnn_cte_lstm_1."State_1" + -0.0009869204367618928 * rnn_cte_lstm_1."State_2" + 0.6025957605766488 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_2 + -0.18826274702944504 * rnn_cte_lstm_1."State_1" + -0.07433004745088768 * rnn_cte_lstm_1."State_2" + 0.48315068336305544 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_5" AS "State_5", greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_i_3 + -0.19968731062397982 * rnn_cte_lstm_1."State_1" + 0.29050618908944825 * rnn_cte_lstm_1."State_2" + -0.3223838401834089 * rnn_cte_lstm_1."State_3") + 0.5)) * (lstm_input_kernel_bias.dot_prod_c_3 + 0.17659892760961093 * rnn_cte_lstm_1."State_1" + -0.15034169326845848 * rnn_cte_lstm_1."State_2" + -0.26352015043366184 * rnn_cte_lstm_1."State_3") + greatest(0.0, least(1.0, 0.2 * (lstm_input_kernel_bias.dot_prod_f_3 + -0.030264955798362903 * rnn_cte_lstm_1."State_1" + 0.535884028160765 * rnn_cte_lstm_1."State_2" + -0.2720818605943181 * rnn_cte_lstm_1."State_3") + 0.5)) * rnn_cte_lstm_1."State_6" AS "State_6" 
FROM lstm_input_kernel_bias, rnn_cte_lstm_1 
WHERE lstm_input_kernel_bias.rn = rnn_cte_lstm_1.rn_1 + 1), 
lstm_1 AS 
(SELECT rnn_cte_lstm_1."KEY" AS "KEY", CAST(rnn_cte_lstm_1."State_1" AS BINARY_DOUBLE) AS output_1, CAST(rnn_cte_lstm_1."State_2" AS BINARY_DOUBLE) AS output_2, CAST(rnn_cte_lstm_1."State_3" AS BINARY_DOUBLE) AS output_3 
FROM rnn_cte_lstm_1), 
lstm_1_1 AS 
(SELECT lstm_1."KEY" AS "KEY", lstm_1.output_1 AS output_1, lstm_1.output_2 AS output_2, lstm_1.output_3 AS output_3 
FROM lstm_1), 
layer_dense_1 AS 
(SELECT lstm_1_1."KEY" AS "KEY", 0.5609922139347517 + 0.0031154561556576855 * lstm_1_1.output_1 + 0.023107381299170407 * lstm_1_1.output_2 + -0.07126925923887567 * lstm_1_1.output_3 AS output_1 
FROM lstm_1_1)
 SELECT layer_dense_1."KEY" AS "KEY", layer_dense_1.output_1 AS "Estimator" 
FROM layer_dense_1